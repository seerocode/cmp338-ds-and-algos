import java.util.Vector;

public interface DriverInterface {

	
		
		/**
		 * 
		 * <p>
		 * This method is used to obtain a <b>Vector&lt;TreeItem&lt;Integer,String&gt;&gt;</b> with 
		 * 131,071 <code>TreeItem</code> objects.
		 * </p>
		 * 
		 * The TreeItem objects created by this method will be <b>TreeItem&lt;Integer,String&gt;</b>,
		 * where:
		 * <ol>
		 * <li>The key is an Integer object representing a randomly generated int in the range 0 - 1,000,000</li>
		 * <li>The value is a String object generated by concatenating "String " and the key</li>
		 * </ol>
		 * 
		 * 
		 * @return	Returns a <b>Vector&lt;TreeItem&lt;Integer,String&gt;&gt;</b> containing 
		 * 131,071 <code>TreeItem</code> objects.
		 * 
		 */
		public Vector<TreeItem<Integer,String>> getVectorOfTreeItems();
		
		
		
		/**
		 * 
		 * This method will create a new BinarySearchTree&lt;Integer,String&gt; and fully populate it with all the
		 * contents of the specified Vector treeItems
		 * 
		 * @param treeItems	A Vector of TreeItem&lt;Integer,String&gt; objects to be inserted into the BinarySearchTree
		 * 
		 * @return	A reference to BinarySearchTree that was created and fully populated.
		 * 
		 */
		public BinarySearchTree<Integer,String> createAndPopulateBST(Vector<TreeItem<Integer, String>> treeItems);

}
